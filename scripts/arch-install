#!/usr/bin/env bash

PACKAGES=(
"arch-install-scripts"
"base"
"base-devel"
"eza"
"fakeroot-tcp"
"git"
"github-cli"
"glow"
"go"
"lazygit"
"less"
"lf"
"lua"
"nano"
"neovim"
"npm"
"python"
"python-pynvim"
"rust"
"stylua"
"sudo"
"unzip"
"vim"
"rust"
"zoxide"
"zsh"
)

echo "Setting up dotfiles"

echo "Installing yay..."
cd ~ # make sure we're in home dir
if command -v "yay" &>/dev/null; then
    echo "yay is installed..."
else
    sudo pacman -S --needed git base-devel && git clone https://aur.archlinux.org/yay.git && cd yay && makepkg -si
fi

### compare PACKAGES with what's been installed so far, 
### only install what hasn't been installed yet
echo "Installing pkgs..."
installed_packages=$(pacman -Qe | awk '{print $1}')
to_install=()
for package in "${PACKAGES[@]}"; do
    if ! echo "$installed_packages" | grep -q "^$package$"; then
        to_install+=("$package")
    else
        echo "Installed... skipping: $package"
    fi
done
yay -S ${to_install[@]}
rm -rf ~/yay

### Setup git
echo "Log Into Git via the CLI please..."
git config --global user.name "vague2k"
git config --global user.email "ilovedrawing056@gmail.com"
gh auth login

echo "Cloning repos..."
mkdir -p ~/Documents/Github
cd ~/Documents/Github

gh repo clone vague2k/huez.nvim
gh repo clone vague2k/vague.nvim
gh repo clone vague2k/rummage
gh repo clone vague2k/smv
gh repo clone vague2k/dotfiles

echo "Creating dotfile links..."
cd ~/Documents/Github/dotfiles
chmod +x ./mklinks && ./mklinks

echo "Setting up zsh..."
cd ~/Documents/Github/dotfiles/zsh

sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

###################################### HELLO THIS IS IMPORTANT ######################################
### After omz installs, it'll kick you out of this script, all you have to do is copy the following lines to continue
### im too lazy to figure out how to make it not kick me out the script, and to be hoenst it's fine to me how it is currently

mv ~/.oh-my-zsh ./ohmyzsh
rm -rf ~/.oh-my-zsh
rm ~/.shell*
rm ~/.z*

cp .zshenv ~/.zshenv
source ~/.zshenv
source ./.zshrc
